/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LowGasSafeMathEchidnaTest,
  LowGasSafeMathEchidnaTestInterface,
} from "../../../../contracts/uniswap-v3-core/test/LowGasSafeMathEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "checkAdd",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "checkAddi",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "checkMul",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "checkSub",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "checkSubi",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156100115760006000fd5b50610017565b6105bb806100266000396000f3fe60806040523480156100115760006000fd5b506004361061006c5760003560e01c80636d886fae116100515780636d886fae146100aa5780639239e777146100c6578063bd78b20d146100e25761006c565b80630f935000146100725780630fe48c5c1461008e5761006c565b60006000fd5b61008c600480360381019061008791906103b0565b6100fe565b005b6100a860048036038101906100a391906103b0565b610154565b005b6100c460048036038101906100bf91906103b0565b6101c0565b005b6100e060048036038101906100db91906103d8565b61020a565b005b6100fc60048036038101906100f791906103d8565b610265565b005b600061011083836102c063ffffffff16565b9050818361011e9190610431565b8114151561012f5761012e610450565b5b82811015801561013f5750818110155b151561014e5761014d610450565b5b505b5050565b600061016683836102e763ffffffff16565b905081836101749190610481565b8114151561018557610184610450565b5b60008314806101945750600082145b806101ab57508281101580156101aa5750818110155b5b15156101ba576101b9610450565b5b505b5050565b60006101d2838361032363ffffffff16565b905081836101e091906104c6565b811415156101f1576101f0610450565b5b82811115151561020457610203610450565b5b505b5050565b600061021c838361034a63ffffffff16565b9050818361022a91906104e5565b8114151561023b5761023a610450565b5b6000821261024c5782811215610250565b8281125b151561025f5761025e610450565b5b505b5050565b6000610277838361037b63ffffffff16565b905081836102859190610513565b8114151561029657610295610450565b5b600082126102a757828113156102ab565b8281135b15156102ba576102b9610450565b5b505b5050565b60008282846102cf9190610431565b915081101515156102e05760006000fd5b5b92915050565b600060008314806103105750818383856103019190610481565b92508261030e9190610540565b145b151561031c5760006000fd5b5b92915050565b600082828461033291906104c6565b915081111515156103435760006000fd5b5b92915050565b60006000821215151583838561036091906104e5565b925082121515151415156103745760006000fd5b5b92915050565b6000600082121515158383856103919190610513565b925082131515151415156103a55760006000fd5b5b9291505056610584565b60006000604083850312156103c55760006000fd5b82359150602083013590505b9250929050565b60006000604083850312156103ed5760006000fd5b82359150602083013590505b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b565b600082820190508082111561044957610448610400565b5b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104ba576104b9610400565b5b82820290505b92915050565b60008282039050818111156104de576104dd610400565b5b5b92915050565b60008282019050828112600083128115811682821516171561050a57610509610400565b5b50505b92915050565b60008282039050600083128282128116838313821516171561053857610537610400565b5b505b92915050565b6000821515610578577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b82820490505b92915050565bfea26469706673582212209a8c27aff1974498f4aa051c41f78caf9e48ff1513698dd00798614e948db31964736f6c63430008100033";

type LowGasSafeMathEchidnaTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LowGasSafeMathEchidnaTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LowGasSafeMathEchidnaTest__factory extends ContractFactory {
  constructor(...args: LowGasSafeMathEchidnaTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LowGasSafeMathEchidnaTest> {
    return super.deploy(overrides || {}) as Promise<LowGasSafeMathEchidnaTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LowGasSafeMathEchidnaTest {
    return super.attach(address) as LowGasSafeMathEchidnaTest;
  }
  override connect(signer: Signer): LowGasSafeMathEchidnaTest__factory {
    return super.connect(signer) as LowGasSafeMathEchidnaTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LowGasSafeMathEchidnaTestInterface {
    return new utils.Interface(_abi) as LowGasSafeMathEchidnaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LowGasSafeMathEchidnaTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LowGasSafeMathEchidnaTest;
  }
}
