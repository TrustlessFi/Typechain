/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SafeMath256Testable,
  SafeMath256TestableInterface,
} from "../SafeMath256Testable";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "mul",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "sub",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156100115760006000fd5b50610017565b610379806100266000396000f3fe60806040523480156100115760006000fd5b50600436106100465760003560e01c8063771602f71461004c578063b67d77c514610099578063c8a4ac9c146100e657610046565b60006000fd5b610083600480360360408110156100635760006000fd5b810190808035906020019092919080359060200190929190505050610133565b6040518082815260200191505060405180910390f35b6100d0600480360360408110156100b05760006000fd5b810190808035906020019092919080359060200190929190505050610153565b6040518082815260200191505060405180910390f35b61011d600480360360408110156100fd5760006000fd5b810190808035906020019092919080359060200190929190505050610173565b6040518082815260200191505060405180910390f35b6000610148828461019390919063ffffffff16565b905080505b92915050565b6000610168828461021c90919063ffffffff16565b905080505b92915050565b600061018882846102a590919063ffffffff16565b905080505b92915050565b60008282840191508110151515610215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6164642d6f766572666c6f77000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b6000828284039150811115151561029e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7375622d756e646572666c6f770000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b600060008214806102c5575082828385029250828115156102c257fe5b04145b151561033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6d756c2d6f766572666c6f77000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b9291505056fea26469706673582212205f2cda67f38a2c940ec9d4c18a123b53938ed582da3f0a199222f8410115c57f64736f6c63430007060033";

type SafeMath256TestableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeMath256TestableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeMath256Testable__factory extends ContractFactory {
  constructor(...args: SafeMath256TestableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeMath256Testable> {
    return super.deploy(overrides || {}) as Promise<SafeMath256Testable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeMath256Testable {
    return super.attach(address) as SafeMath256Testable;
  }
  connect(signer: Signer): SafeMath256Testable__factory {
    return super.connect(signer) as SafeMath256Testable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeMath256TestableInterface {
    return new utils.Interface(_abi) as SafeMath256TestableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeMath256Testable {
    return new Contract(address, _abi, signerOrProvider) as SafeMath256Testable;
  }
}
