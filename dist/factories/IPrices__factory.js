/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, utils } from "ethers";
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "pool",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "int24",
                name: "tick",
                type: "int24",
            },
        ],
        name: "PriceUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "twapDuration",
                type: "uint32",
            },
        ],
        name: "calculateInstantCollateralPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IUniswapV3Pool",
                name: "pool",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "twapDuration",
                type: "uint32",
            },
        ],
        name: "calculateInstantTwappedPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IUniswapV3Pool",
                name: "pool",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "twapDuration",
                type: "uint32",
            },
        ],
        name: "calculateInstantTwappedTick",
        outputs: [
            {
                internalType: "int24",
                name: "tick",
                type: "int24",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IUniswapV3Pool",
                name: "pool",
                type: "address",
            },
            {
                internalType: "bool",
                name: "normalizeDecimals",
                type: "bool",
            },
        ],
        name: "calculateTwappedPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IUniswapV3Pool",
                name: "pool",
                type: "address",
            },
            {
                internalType: "int24",
                name: "tick",
                type: "int24",
            },
            {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
            },
            {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
            },
            {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
            },
            {
                internalType: "uint32",
                name: "twapDuration",
                type: "uint32",
            },
        ],
        name: "getRealHueCountForSinglePoolPosition",
        outputs: [
            {
                internalType: "uint256",
                name: "hueCount",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "twapDuration",
                type: "uint32",
            },
        ],
        name: "hueTcpPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IUniswapV3Pool",
                name: "pool",
                type: "address",
            },
        ],
        name: "initializePool",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IUniswapV3Pool",
                name: "pool",
                type: "address",
            },
        ],
        name: "initializeWethPool",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IUniswapV3Pool",
                name: "pool",
                type: "address",
            },
        ],
        name: "isPoolInitialized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "stop",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IUniswapV3Pool",
                name: "pool",
                type: "address",
            },
        ],
        name: "systemObtainReferencePrice",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var IPrices__factory = /** @class */ (function () {
    function IPrices__factory() {
    }
    IPrices__factory.createInterface = function () {
        return new utils.Interface(_abi);
    };
    IPrices__factory.connect = function (address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    };
    IPrices__factory.abi = _abi;
    return IPrices__factory;
}());
export { IPrices__factory };
