var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
var _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "name_",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol_",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x6080604052348015620000125760006000fd5b506040516200143738038062001437833981810160405281019062000038919062000143565b5b81600360005090816200004d91906200027f565b5080600460005090816200006291906200027f565b505b50506200035c566200035b565b634e487b7160e01b600052604160045260246000fd5b565b600082601f83011215156200009e5760006000fd5b81516001600160401b0380821115620000bc57620000bb62000071565b5b601f1960405181603f83601f8701160116810191508082108383111715620000e957620000e862000071565b5b81604052838152602092508683858801011115620001075760006000fd5b600091505b838210156200012d578282870101518383830101525b82820191506200010c565b6000838583010152809450505050505b92915050565b6000600060408385031215620001595760006000fd5b82516001600160401b0380821115620001725760006000fd5b620001808683870162000089565b93506020850151915080821115620001985760006000fd5b50620001a78582860162000089565b9150505b9250929050565b60008160011c905060018216801515620001cd57607f821691505b60208210811415620001ef57634e487b7160e01b600052602260045260246000fd5b505b919050565b80600052506000602060002090505b90565b601f8211156200025e57600081815260208120601f850160051c8101602086101562000232578190505b601f850160051c820191508090505b818110156200025a578281555b60018101905062000241565b5050505b5050505b565b60008260011b6000198460031b1c1983161790505b92915050565b81516001600160401b038111156200029c576200029b62000071565b5b620002b481620002ad8454620001b2565b8462000208565b60006020809150601f831160018114620002ed5760008415620002d8578387015190505b620002e4858262000264565b86555062000352565b601f198416620002fd86620001f6565b60005b82811015620003265785890151825560018201915084860195505b848101905062000300565b508582101562000346578488015160001960f88860031b161c1981168255505b505060018460011b0185555b5050505050505b565b5b6110cb806200036c6000396000f3fe60806040523480156100115760006000fd5b50600436106100ce5760003560e01c80633950935111610082578063a457c2d71161005c578063a457c2d71461020c578063a9059cbb1461023c578063dd62ed3e1461026c576100ce565b8063395093511461018e57806370a08231146101be57806395d89b41146101ee576100ce565b806318160ddd116100b357806318160ddd1461012257806323b872dd14610140578063313ce56714610170576100ce565b806306fdde03146100d4578063095ea7b3146100f2576100ce565b60006000fd5b6100dc61029c565b6040516100e99190610bb1565b60405180910390f35b61010c60048036038101906101079190610c53565b610336565b6040516101199190610c82565b60405180910390f35b61012a61036c565b6040516101379190610c96565b60405180910390f35b61015a60048036038101906101559190610ca8565b61037e565b6040516101679190610c82565b60405180910390f35b6101786103c6565b6040516101859190610ce7565b60405180910390f35b6101a860048036038101906101a39190610c53565b6103d4565b6040516101b59190610c82565b60405180910390f35b6101d860048036038101906101d39190610cfc565b610424565b6040516101e59190610c96565b60405180910390f35b6101f6610478565b6040516102039190610bb1565b60405180910390f35b61022660048036038101906102219190610c53565b610512565b6040516102339190610c82565b60405180910390f35b61025660048036038101906102519190610c53565b6105a5565b6040516102639190610c82565b60405180910390f35b61028660048036038101906102819190610d21565b6105db565b6040516102939190610c96565b60405180910390f35b6060600360005080546102ae90610d57565b80601f01602080910402602001604051908101604052809291908181526020018280546102da90610d57565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b50505050509050610333565b90565b6000600061034861067063ffffffff16565b905061035b81858561067d63ffffffff16565b600191505061036656505b92915050565b6000600260005054905061037b565b90565b6000600061039061067063ffffffff16565b90506103a385828561085863ffffffff16565b6103b48585856108f563ffffffff16565b60019150506103bf56505b9392505050565b6000601290506103d1565b90565b600060006103e661067063ffffffff16565b90506104138185856103fe85896105db63ffffffff16565b6104089190610db2565b61067d63ffffffff16565b600191505061041e56505b92915050565b6000600060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050610473565b919050565b60606004600050805461048a90610d57565b80601f01602080910402602001604051908101604052809291908181526020018280546104b690610d57565b80156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b5050505050905061050f565b90565b6000600061052461067063ffffffff16565b9050600061053882866105db63ffffffff16565b905083811015151561057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610df7565b60405180910390fd5b610592828686840361067d63ffffffff16565b60019250505061059f5650505b92915050565b600060006105b761067063ffffffff16565b90506105ca8185856108f563ffffffff16565b60019150506105d556505b92915050565b6000600160005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054905061066a565b92915050565b600033905061067a565b90565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690610e5c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075890610ec1565b60405180910390fd5b80600160005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190909055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161084a9190610c96565b60405180910390a35b505050565b600061086a84846105db63ffffffff16565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811415156108ee578181101515156108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190610f26565b60405180910390fd5b6108ed848484840361067d63ffffffff16565b5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e90610f65565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156109d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d090610fca565b60405180910390fd5b6109ea838383610ba163ffffffff16565b6000600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050818110151515610a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a709061102f565b60405180910390fd5b818103600060005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555081600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282825054610b1b9190610db2565b9250508190909055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b819190610c96565b60405180910390a3610b9a848484610ba763ffffffff16565b505b505050565b5b505050565b5b50505056611094565b600060208083528351808285015260005b81811015610be257828187010151604082870101525b8281019050610bc2565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050505b92915050565b60008135905073ffffffffffffffffffffffffffffffffffffffff811681141515610c4d5760006000fd5b5b919050565b6000600060408385031215610c685760006000fd5b610c7183610c22565b9150602083013590505b9250929050565b600060208201905082151582525b92915050565b60006020820190508282525b92915050565b60006000600060608486031215610cbf5760006000fd5b610cc884610c22565b9250610cd660208501610c22565b9150604084013590505b9250925092565b600060208201905060ff831682525b92915050565b600060208284031215610d0f5760006000fd5b610d1882610c22565b90505b92915050565b6000600060408385031215610d365760006000fd5b610d3f83610c22565b9150610d4d60208401610c22565b90505b9250929050565b60008160011c905060018216801515610d7157607f821691505b60208210811415610dab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b505b919050565b6000828201905080821115610df0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5b92915050565b60208152602560208201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602460208201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602260208201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152601d60208201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260006060820190505b919050565b60208152602560208201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602360208201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602660208201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565bfea2646970667358221220983b91cd56eb003882551bbf530e3847f9afe022ca032cf5fe6f598406c83b3b64736f6c63430008100033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ERC20__factory = /** @class */ (function (_super) {
    __extends(ERC20__factory, _super);
    function ERC20__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ERC20__factory.prototype.deploy = function (name_, symbol_, overrides) {
        return _super.prototype.deploy.call(this, name_, symbol_, overrides || {});
    };
    ERC20__factory.prototype.getDeployTransaction = function (name_, symbol_, overrides) {
        return _super.prototype.getDeployTransaction.call(this, name_, symbol_, overrides || {});
    };
    ERC20__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ERC20__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ERC20__factory.createInterface = function () {
        return new utils.Interface(_abi);
    };
    ERC20__factory.connect = function (address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    };
    ERC20__factory.bytecode = _bytecode;
    ERC20__factory.abi = _abi;
    return ERC20__factory;
}(ContractFactory));
export { ERC20__factory };
