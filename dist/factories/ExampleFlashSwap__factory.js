var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_factory",
                type: "address",
            },
            {
                internalType: "address",
                name: "_factoryV1",
                type: "address",
            },
            {
                internalType: "address",
                name: "router",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount0",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount1",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "uniswapV2Call",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
var _bytecode = "0x60e06040523480156100115760006000fd5b50604051611a28380380611a28833981810160405260608110156100355760006000fd5b810190808051906020019092919080519060200190929190805190602001909291905050505b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815260140150508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815260140150508073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156101165760006000fd5b505afa15801561012b573d600060003e3d6000fd5b505050506040513d60208110156101425760006000fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815260140150505b505050610195565b60805160601c60a05160601c60c05160601c6118316101f76000398061038b52806103ea528061044b52806104b6528061052652806108b452806109375280610b6652508061025852806108635280610cb65250806105c752506118316000f3fe6080604052600436106100225760003560e01c806310d1e85c146100315761002b565b3661002b575b5b005b60006000fd5b34801561003e5760006000fd5b506100f0600480360360808110156100565760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156100a85760006000fd5b8201836020820111156100bb5760006000fd5b803590602001918460018302840111640100000000831117156100de5760006000fd5b909192939090919293905050506100f2565b005b6060600267ffffffffffffffff8111801561010d5760006000fd5b5060405190808252806020026020018201604052801561013c5781602001602082028036833780820191505090505b5090506000600060003373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561018c5760006000fd5b505afa1580156101a1573d600060003e3d6000fd5b505050506040513d60208110156101b85760006000fd5b8101908080519060200190929190505050905060003373ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156102145760006000fd5b505afa158015610229573d600060003e3d6000fd5b505050506040513d60208110156102405760006000fd5b810190808051906020019092919050505090506102847f00000000000000000000000000000000000000000000000000000000000000008383610eb263ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102ba57fe5b60008914806102c95750600088145b15156102d157fe5b600089146102df57806102e1565b815b8560008151811015156102f057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815260200150506000891461033b578161033d565b805b85600181518110151561034c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815260200150507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146103e257886103e4565b875b935083507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146104415787610443565b885b9250825050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1683600081518110151561048f57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16148061051a57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168360018151811015156104fa57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16145b151561052257fe5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1684600081518110151561056a57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16146105a95783600081518110151561059c57fe5b60200260200101516105c1565b8360018151811015156105b857fe5b60200260200101515b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166306f2bf62836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156106635760006000fd5b505afa158015610678573d600060003e3d6000fd5b505050506040513d602081101561068f5760006000fd5b810190808051906020019092919050505090506000841115610b3e576000878760208110156106be5760006000fd5b810190808035906020019092919050505090508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107595760006000fd5b505af115801561076e573d600060003e3d6000fd5b505050506040513d60208110156107855760006000fd5b81019080805190602001909291905050505060008273ffffffffffffffffffffffffffffffffffffffff166395e3c50b87847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518463ffffffff1660e01b8152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561081d5760006000fd5b505af1158015610832573d600060003e3d6000fd5b505050506040513d60208110156108495760006000fd5b81019080805190602001909291905050509050600061088f7f0000000000000000000000000000000000000000000000000000000000000000888a61102563ffffffff16565b600081518110151561089d57fe5b6020026020010151905080821115156108b257fe5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561091b5760006000fd5b505af1158015610930573d600060003e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156109dd5760006000fd5b505af11580156109f2573d600060003e3d6000fd5b505050506040513d6020811015610a095760006000fd5b81019080805190602001909291905050501515610a2257fe5b60008d73ffffffffffffffffffffffffffffffffffffffff16828403600067ffffffffffffffff81118015610a575760006000fd5b506040519080825280601f01601f191660200182016040528015610a8a5781602001600182028036833780820191505090505b506040518082805190602001908083835b602083101515610ac157805182525b602082019150602081019050602083039250610a9b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610b23576040519150601f19603f3d011682016040523d82523d6000602084013e610b28565b606091505b50509050801515610b3557fe5b50505050610ea5565b600087876020811015610b515760006000fd5b810190808035906020019092919050505090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d856040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610bd85760006000fd5b505af1158015610bed573d600060003e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff1663f39b5b9b86847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518463ffffffff1660e01b815260040180838152602001828152602001925050506020604051808303818588803b158015610c6f5760006000fd5b505af1158015610c84573d600060003e3d6000fd5b50505050506040513d6020811015610c9c5760006000fd5b810190808051906020019092919050505090506000610ce27f0000000000000000000000000000000000000000000000000000000000000000878a61102563ffffffff16565b6000815181101515610cf057fe5b602002602001015190508082111515610d0557fe5b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610d8d5760006000fd5b505af1158015610da2573d600060003e3d6000fd5b505050506040513d6020811015610db95760006000fd5b81019080805190602001909291905050501515610dd257fe5b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8e8385036040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e5c5760006000fd5b505af1158015610e71573d600060003e3d6000fd5b505050506040513d6020811015610e885760006000fd5b81019080805190602001909291905050501515610ea157fe5b5050505b50505050505b5050505050565b600060006000610ec885856111d063ffffffff16565b91509150858282604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401925050506040516020818303038152906040528051906020012060405160200180807fff000000000000000000000000000000000000000000000000000000000000008152602001506001018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018260001916600019168152602001807f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f815260200150602001925050506040516020818303038152906040528051906020012060001c9250825050505b9392505050565b606060028251101515156110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f556e697377617056324c6962726172793a20494e56414c49445f50415448000081526020015060200191505060405180910390fd5b815167ffffffffffffffff811180156110bd5760006000fd5b506040519080825280602002602001820160405280156110ec5781602001602082028036833780820191505090505b50905080508281600183510381518110151561110457fe5b60200260200101909081815260200150506000600183510390505b60008111156111c7576000600061116a87866001860381518110151561114157fe5b6020026020010151878681518110151561115757fe5b602002602001015161135063ffffffff16565b91509150611194848481518110151561117f57fe5b6020026020010151838361148b63ffffffff16565b84600185038151811015156111a557fe5b602002602001019090818152602001505050505b80806001900391505061111f565b505b9392505050565b600060008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561125b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117af6025913960400191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610611295578284611298565b83835b8092508193505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f556e697377617056324c6962726172793a205a45524f5f41444452455353000081526020015060200191505060405180910390fd5b5b9250929050565b60006000600061136685856111d063ffffffff16565b5090506000600061137e888888610eb263ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156113c45760006000fd5b505afa1580156113d9573d600060003e3d6000fd5b505050506040513d60608110156113f05760006000fd5b81019080805190602001909291908051906020019092919080519060200190929190505050506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611474578082611477565b81815b80955081965050505050505b935093915050565b60006000841115156114e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611783602c913960400191505060405180910390fd5b6000831180156114f85750600082115b151561154f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806117d46028913960400191505060405180910390fd5b60006115786103e861156a87876115d290919063ffffffff16565b6115d290919063ffffffff16565b905060006115a36103e5611595888761167090919063ffffffff16565b6115d290919063ffffffff16565b90506115c4600182848115156115b557fe5b046116f990919063ffffffff16565b9250825050505b9392505050565b600060008214806115f2575082828385029250828115156115ef57fe5b04145b1515611669576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b600082828403915081111515156116f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b6000828284019150811015151561177b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081526020015060200191505060405180910390fd5b5b9291505056fe556e697377617056324c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553556e697377617056324c6962726172793a20494e53554646494349454e545f4c4951554944495459a26469706673582212208400bd4538764ad62b5d1149c6973549c15affd2483f06365cb7882ba71ba97964736f6c63430006060033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ExampleFlashSwap__factory = /** @class */ (function (_super) {
    __extends(ExampleFlashSwap__factory, _super);
    function ExampleFlashSwap__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ExampleFlashSwap__factory.prototype.deploy = function (_factory, _factoryV1, router, overrides) {
        return _super.prototype.deploy.call(this, _factory, _factoryV1, router, overrides || {});
    };
    ExampleFlashSwap__factory.prototype.getDeployTransaction = function (_factory, _factoryV1, router, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _factory, _factoryV1, router, overrides || {});
    };
    ExampleFlashSwap__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ExampleFlashSwap__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ExampleFlashSwap__factory.createInterface = function () {
        return new utils.Interface(_abi);
    };
    ExampleFlashSwap__factory.connect = function (address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    };
    ExampleFlashSwap__factory.bytecode = _bytecode;
    ExampleFlashSwap__factory.abi = _abi;
    return ExampleFlashSwap__factory;
}(ContractFactory));
export { ExampleFlashSwap__factory };
