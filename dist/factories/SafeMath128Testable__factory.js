var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
var _abi = [
    {
        inputs: [
            {
                internalType: "uint128",
                name: "a",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "b",
                type: "uint128",
            },
        ],
        name: "add",
        outputs: [
            {
                internalType: "uint128",
                name: "r",
                type: "uint128",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint128",
                name: "a",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "b",
                type: "uint128",
            },
        ],
        name: "mul",
        outputs: [
            {
                internalType: "uint128",
                name: "r",
                type: "uint128",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint128",
                name: "a",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "b",
                type: "uint128",
            },
        ],
        name: "sub",
        outputs: [
            {
                internalType: "uint128",
                name: "r",
                type: "uint128",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156100115760006000fd5b50610017565b6104f3806100266000396000f3fe60806040523480156100115760006000fd5b50600436106100465760003560e01c8063a6fd00851461004c578063e856528a146100cf578063feb993901461015257610046565b60006000fd5b6100a7600480360360408110156100635760006000fd5b8101908080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff1690602001909291905050506101d5565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012a600480360360408110156100e65760006000fd5b8101908080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610207565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ad600480360360408110156101695760006000fd5b8101908080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610239565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006101fc82846fffffffffffffffffffffffffffffffff1661026b90919063ffffffff16565b905080505b92915050565b600061022e82846fffffffffffffffffffffffffffffffff1661031890919063ffffffff16565b905080505b92915050565b600061026082846fffffffffffffffffffffffffffffffff1661041090919063ffffffff16565b905080505b92915050565b6000826fffffffffffffffffffffffffffffffff168284039150816fffffffffffffffffffffffffffffffff1611151515610311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7375622d756e646572666c6f770000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b60006000826fffffffffffffffffffffffffffffffff1614806103925750826fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff168385029250826fffffffffffffffffffffffffffffffff1681151561037d57fe5b046fffffffffffffffffffffffffffffffff16145b1515610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6d756c2d6f766572666c6f77000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b6000826fffffffffffffffffffffffffffffffff168284019150816fffffffffffffffffffffffffffffffff16101515156104b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6164642d6f766572666c6f77000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b9291505056fea2646970667358221220c018fda07ae433d34235bea186138e583323eb5677c3005439b6dc9ca2393b1a64736f6c63430007060033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var SafeMath128Testable__factory = /** @class */ (function (_super) {
    __extends(SafeMath128Testable__factory, _super);
    function SafeMath128Testable__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    SafeMath128Testable__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    SafeMath128Testable__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    SafeMath128Testable__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SafeMath128Testable__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SafeMath128Testable__factory.createInterface = function () {
        return new utils.Interface(_abi);
    };
    SafeMath128Testable__factory.connect = function (address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    };
    SafeMath128Testable__factory.bytecode = _bytecode;
    SafeMath128Testable__factory.abi = _abi;
    return SafeMath128Testable__factory;
}(ContractFactory));
export { SafeMath128Testable__factory };
