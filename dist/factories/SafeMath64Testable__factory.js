var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
var _abi = [
    {
        inputs: [
            {
                internalType: "uint64",
                name: "a",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "b",
                type: "uint64",
            },
        ],
        name: "add",
        outputs: [
            {
                internalType: "uint64",
                name: "r",
                type: "uint64",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "a",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "b",
                type: "uint64",
            },
        ],
        name: "mul",
        outputs: [
            {
                internalType: "uint64",
                name: "r",
                type: "uint64",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "a",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "b",
                type: "uint64",
            },
        ],
        name: "sub",
        outputs: [
            {
                internalType: "uint64",
                name: "r",
                type: "uint64",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156100115760006000fd5b50610017565b61044b806100266000396000f3fe60806040523480156100115760006000fd5b50600436106100465760003560e01c806322c6ae151461004c5780636e2c732d146100b7578063911b5f4e1461012257610046565b60006000fd5b610097600480360360408110156100635760006000fd5b81019080803567ffffffffffffffff169060200190929190803567ffffffffffffffff16906020019092919050505061018d565b604051808267ffffffffffffffff16815260200191505060405180910390f35b610102600480360360408110156100ce5760006000fd5b81019080803567ffffffffffffffff169060200190929190803567ffffffffffffffff1690602001909291905050506101b7565b604051808267ffffffffffffffff16815260200191505060405180910390f35b61016d600480360360408110156101395760006000fd5b81019080803567ffffffffffffffff169060200190929190803567ffffffffffffffff1690602001909291905050506101e1565b604051808267ffffffffffffffff16815260200191505060405180910390f35b60006101ac828467ffffffffffffffff1661020b90919063ffffffff16565b905080505b92915050565b60006101d6828467ffffffffffffffff166102db90919063ffffffff16565b905080505b92915050565b6000610200828467ffffffffffffffff1661037890919063ffffffff16565b905080505b92915050565b600060008267ffffffffffffffff16148061025d57508267ffffffffffffffff168267ffffffffffffffff1683850292508267ffffffffffffffff1681151561025057fe5b0467ffffffffffffffff16145b15156102d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6d756c2d6f766572666c6f77000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b60008267ffffffffffffffff1682840191508167ffffffffffffffff1610151515610371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6164642d6f766572666c6f77000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b60008267ffffffffffffffff1682840391508167ffffffffffffffff161115151561040e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7375622d756e646572666c6f770000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b9291505056fea2646970667358221220a5c53c51e357f480db238c6fe651cf81e84e5c6f35594f4e8c0ea530a8728a8764736f6c63430007060033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var SafeMath64Testable__factory = /** @class */ (function (_super) {
    __extends(SafeMath64Testable__factory, _super);
    function SafeMath64Testable__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    SafeMath64Testable__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    SafeMath64Testable__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    SafeMath64Testable__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SafeMath64Testable__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SafeMath64Testable__factory.createInterface = function () {
        return new utils.Interface(_abi);
    };
    SafeMath64Testable__factory.connect = function (address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    };
    SafeMath64Testable__factory.bytecode = _bytecode;
    SafeMath64Testable__factory.abi = _abi;
    return SafeMath64Testable__factory;
}(ContractFactory));
export { SafeMath64Testable__factory };
