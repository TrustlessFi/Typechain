import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { MockERC20, MockERC20Interface } from "../../../../contracts/core/mocks/MockERC20";
declare type MockERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockERC20__factory extends ContractFactory {
    constructor(...args: MockERC20ConstructorParams);
    deploy(initialHolder: PromiseOrValue<string>, initialTokens: PromiseOrValue<BigNumberish>, _name: PromiseOrValue<string>, _symbol: PromiseOrValue<string>, _decimalsOverride: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockERC20>;
    getDeployTransaction(initialHolder: PromiseOrValue<string>, initialTokens: PromiseOrValue<BigNumberish>, _name: PromiseOrValue<string>, _symbol: PromiseOrValue<string>, _decimalsOverride: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockERC20;
    connect(signer: Signer): MockERC20__factory;
    static readonly bytecode = "0x60a0604052348015620000125760006000fd5b506040516200173438038062001734833981810160405281019062000038919062000349565b5b82825b8160036000509081620000509190620004d3565b508060046000509081620000659190620004d3565b505b50508060ff1660808160ff1681526020015050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614158015620000b9575060008414155b15620000d257620000d18585620000de60201b60201c565b5b5b50505050506200062e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562000153576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014a90620005af565b60405180910390fd5b62000167600083836200026660201b60201c565b806002600082828250546200017d9190620005ee565b92505081909090555080600060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282825054620001dc9190620005ee565b9250508190909055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200024591906200061b565b60405180910390a362000261600083836200026c60201b60201c565b5b5050565b5b505050565b5b505050566200062d565b634e487b7160e01b600052604160045260246000fd5b565b600082601f8301121515620002a45760006000fd5b81516001600160401b0380821115620002c257620002c162000277565b5b601f1960405181603f83601f8701160116810191508082108383111715620002ef57620002ee62000277565b5b816040528381526020925086838588010111156200030d5760006000fd5b600091505b8382101562000333578282870101518383830101525b828201915062000312565b6000838583010152809450505050505b92915050565b6000600060006000600060a08688031215620003655760006000fd5b85516001600160a01b03811681141515620003805760006000fd5b809550506020860151935060408601516001600160401b0380821115620003a75760006000fd5b620003b589838a016200028f565b94506060880151915080821115620003cd5760006000fd5b50620003dc888289016200028f565b925050608086015160ff811681141515620003f75760006000fd5b809150505b9295509295909350565b60008160011c9050600182168015156200042157607f821691505b602082108114156200044357634e487b7160e01b600052602260045260246000fd5b505b919050565b80600052506000602060002090505b90565b601f821115620004b257600081815260208120601f850160051c8101602086101562000486578190505b601f850160051c820191508090505b81811015620004ae578281555b60018101905062000495565b5050505b5050505b565b60008260011b6000198460031b1c1983161790505b92915050565b81516001600160401b03811115620004f057620004ef62000277565b5b620005088162000501845462000406565b846200045c565b60006020809150601f8311600181146200054157600084156200052c578387015190505b620005388582620004b8565b865550620005a6565b601f19841662000551866200044a565b60005b828110156200057a5785890151825560018201915084860195505b848101905062000554565b50858210156200059a578488015160001960f88860031b161c1981168255505b505060018460011b0185555b5050505050505b565b60208152601f60208201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260006060820190505b919050565b60008282019050808211156200061457634e487b7160e01b600052601160045260246000fd5b5b92915050565b60006020820190508282525b92915050565b5b6080516110ea6200064a60003960006103ca01526110ea6000f3fe60806040523480156100115760006000fd5b50600436106100ce5760003560e01c80633950935111610082578063a457c2d71161005c578063a457c2d71461020c578063a9059cbb1461023c578063dd62ed3e1461026c576100ce565b8063395093511461018e57806370a08231146101be57806395d89b41146101ee576100ce565b806318160ddd116100b357806318160ddd1461012257806323b872dd14610140578063313ce56714610170576100ce565b806306fdde03146100d4578063095ea7b3146100f2576100ce565b60006000fd5b6100dc61029c565b6040516100e99190610bd0565b60405180910390f35b61010c60048036038101906101079190610c72565b610336565b6040516101199190610ca1565b60405180910390f35b61012a61036c565b6040516101379190610cb5565b60405180910390f35b61015a60048036038101906101559190610cc7565b61037e565b6040516101679190610ca1565b60405180910390f35b6101786103c6565b6040516101859190610d06565b60405180910390f35b6101a860048036038101906101a39190610c72565b6103f3565b6040516101b59190610ca1565b60405180910390f35b6101d860048036038101906101d39190610d1b565b610443565b6040516101e59190610cb5565b60405180910390f35b6101f6610497565b6040516102039190610bd0565b60405180910390f35b61022660048036038101906102219190610c72565b610531565b6040516102339190610ca1565b60405180910390f35b61025660048036038101906102519190610c72565b6105c4565b6040516102639190610ca1565b60405180910390f35b61028660048036038101906102819190610d40565b6105fa565b6040516102939190610cb5565b60405180910390f35b6060600360005080546102ae90610d76565b80601f01602080910402602001604051908101604052809291908181526020018280546102da90610d76565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b50505050509050610333565b90565b6000600061034861068f63ffffffff16565b905061035b81858561069c63ffffffff16565b600191505061036656505b92915050565b6000600260005054905061037b565b90565b6000600061039061068f63ffffffff16565b90506103a385828561087763ffffffff16565b6103b485858561091463ffffffff16565b60019150506103bf56505b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000090506103f0565b90565b6000600061040561068f63ffffffff16565b905061043281858561041d85896105fa63ffffffff16565b6104279190610dd1565b61069c63ffffffff16565b600191505061043d56505b92915050565b6000600060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050610492565b919050565b6060600460005080546104a990610d76565b80601f01602080910402602001604051908101604052809291908181526020018280546104d590610d76565b80156105225780601f106104f757610100808354040283529160200191610522565b820191906000526020600020905b81548152906001019060200180831161050557829003601f168201915b5050505050905061052e565b90565b6000600061054361068f63ffffffff16565b9050600061055782866105fa63ffffffff16565b905083811015151561059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590610e16565b60405180910390fd5b6105b1828686840361069c63ffffffff16565b6001925050506105be5650505b92915050565b600060006105d661068f63ffffffff16565b90506105e981858561091463ffffffff16565b60019150506105f456505b92915050565b6000600160005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050610689565b92915050565b6000339050610699565b90565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561070e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590610e7b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077790610ee0565b60405180910390fd5b80600160005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190909055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108699190610cb5565b60405180910390a35b505050565b600061088984846105fa63ffffffff16565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114151561090d578181101515156108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f090610f45565b60405180910390fd5b61090c848484840361069c63ffffffff16565b5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097d90610f84565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156109f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ef90610fe9565b60405180910390fd5b610a09838383610bc063ffffffff16565b6000600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050818110151515610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f9061104e565b60405180910390fd5b818103600060005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555081600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282825054610b3a9190610dd1565b9250508190909055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ba09190610cb5565b60405180910390a3610bb9848484610bc663ffffffff16565b505b505050565b5b505050565b5b505050566110b3565b600060208083528351808285015260005b81811015610c0157828187010151604082870101525b8281019050610be1565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050505b92915050565b60008135905073ffffffffffffffffffffffffffffffffffffffff811681141515610c6c5760006000fd5b5b919050565b6000600060408385031215610c875760006000fd5b610c9083610c41565b9150602083013590505b9250929050565b600060208201905082151582525b92915050565b60006020820190508282525b92915050565b60006000600060608486031215610cde5760006000fd5b610ce784610c41565b9250610cf560208501610c41565b9150604084013590505b9250925092565b600060208201905060ff831682525b92915050565b600060208284031215610d2e5760006000fd5b610d3782610c41565b90505b92915050565b6000600060408385031215610d555760006000fd5b610d5e83610c41565b9150610d6c60208401610c41565b90505b9250929050565b60008160011c905060018216801515610d9057607f821691505b60208210811415610dca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b505b919050565b6000828201905080821115610e0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5b92915050565b60208152602560208201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602460208201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602260208201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152601d60208201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260006060820190505b919050565b60208152602560208201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602360208201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602660208201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565bfea264697066735822122054b2a2bd4373d12f9cac3c60ecadf5cb5f7ed16cb6a42245401f089a876a636764736f6c63430008100033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
        name?: undefined;
        outputs?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): MockERC20Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockERC20;
}
export {};
