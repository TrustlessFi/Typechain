import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProtocolDataAggregator, ProtocolDataAggregatorInterface } from "../../../../../contracts/core/auxiliary/ProtocolDataAggregator.sol/ProtocolDataAggregator";
declare type ProtocolDataAggregatorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ProtocolDataAggregator__factory extends ContractFactory {
    constructor(...args: ProtocolDataAggregatorConstructorParams);
    deploy(params: ProtocolDataAggregator.ConstructorParamsStruct, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ProtocolDataAggregator>;
    getDeployTransaction(params: ProtocolDataAggregator.ConstructorParamsStruct, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): ProtocolDataAggregator;
    connect(signer: Signer): ProtocolDataAggregator__factory;
    static readonly bytecode = "0x60806040526001600160005090905534801561001b5760006000fd5b50604051610d8e380380610d8e833981810160405281019061003d919061008e565b5b8060000151600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50610100566100ff565b6000602082840312156100a15760006000fd5b604051602081018181106001600160401b03821117156100d157634e487b7160e01b600052604160045260246000fd5b806040525082516001600160a01b038116811415156100f05760006000fd5b80825250809150505b92915050565b5b610c7f8061010f6000396000f3fe60806040523480156100115760006000fd5b506004361061006c5760003560e01c80635e016b90116100515780635e016b901461009a57806361bc221a146100ca578063adc7f301146100e85761006c565b80630c340a24146100725780635b34b966146100905761006c565b60006000fd5b61007a610106565b6040516100879190610753565b60405180910390f35b61009861012c565b005b6100b460048036038101906100af9190610820565b61014c565b6040516100c191906108e4565b60405180910390f35b6100d261035c565b6040516100df9190610933565b60405180910390f35b6100f0610365565b6040516100fd9190610945565b60405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160016000505461013e91906109f2565b60016000508190909055505b565b60606000825190508067ffffffffffffffff81111561016e5761016d61077b565b5b60405190808252806020026020018201604052801561019c5781602001602082028036833780820191505090505b50915081506000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639624e83e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610211573d600060003e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610a3b565b9050600060006000600090505b84811015610346578373ffffffffffffffffffffffffffffffffffffffff16636594da9f888381518110151561027b5761027a610a64565b5b60200260200101516040518263ffffffff1660e01b815260040161029f9190610a95565b604060405180830381865afa1580156102bd573d600060003e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e19190610ab1565b8093508194505050600083146103095761030483836105c890919063ffffffff16565b61030c565b60005b868281518110151561032157610320610a64565b5b60200260200101909081815260200150505b808061033e90610ad9565b915050610242565b508494505050505061035756505050505b919050565b60016000505481565b60606000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ec5a8946040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103d7573d600060003e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610b18565b905060008173ffffffffffffffffffffffffffffffffffffffff16636fcdfed66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044b573d600060003e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190610b41565b61ffff169050600081141561048c5782925050506105c5566104e5565b8067ffffffffffffffff8111156104a6576104a561077b565b5b6040519080825280602002602001820160405280156104df57816020015b6104cc610712565b8152602001906001900390816104c45790505b50925082505b6000600190505b818161ffff161115156105b8578273ffffffffffffffffffffffffffffffffffffffff1663fbe6eb9b826040518263ffffffff1660e01b81526004016105329190610b74565b604060405180830381865afa158015610550573d600060003e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105749190610b8a565b846001836105829190610bf5565b61ffff1681518110151561059957610598610a64565b5b60200260200101819052505b80806105b090610c21565b9150506104ec565b5082925050506105c55650505b90565b60006105e383670de0b6b3a7640000846105ee63ffffffff16565b905080505b92915050565b6000600060006000198587098587029250828110838203039150506000811415610631576000841115156106225760006000fd5b8382049250829250505061070b565b80841115156106405760006000fd5b60008486880990508281118203915080830392506000856001877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03011690508050808604955080840493506001818260000304019050808302841793508350600060028760030218905080870260020381029050805080870260020381029050805080870260020381029050805080870260020381029050805080870260020381029050805080870260020381029050805080850295508550508494505050505061070b56505050505b9392505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001509056610c48565b600060208201905073ffffffffffffffffffffffffffffffffffffffff831682525b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b565b600060405190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff821117156107f8576107f761077b565b5b80604052505b919050565b67ffffffffffffffff81168114151561081c5760006000fd5b505b565b600060208083850312156108345760006000fd5b823567ffffffffffffffff8082111561084d5760006000fd5b818501915085601f83011215156108645760006000fd5b8135818111156108775761087661077b565b5b8060051b91506108888483016107ac565b80828252858201915085848601019350888411156108a65760006000fd5b85850194505b838510156108d457843592506108c183610803565b82825285820191505b85850194506108ac565b8096505050505050505b92915050565b60006020808301818452808551808352604086019150838701925060005b818110156109245783518352848301925084840193505b600181019050610902565b50508093505050505b92915050565b60006020820190508282525b92915050565b6000602080830181845280855180835260409250828601915083870160005b828110156109b157815173ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff87820151168786015250848401935085820191505b600181019050610964565b5050508093505050505b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b565b60008219821115610a0657610a056109c1565b5b82820190505b92915050565b73ffffffffffffffffffffffffffffffffffffffff811681141515610a375760006000fd5b505b565b600060208284031215610a4e5760006000fd5b8151610a5981610a12565b809150505b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b565b600060208201905067ffffffffffffffff831682525b92915050565b6000600060408385031215610ac65760006000fd5b82519150602083015190505b9250929050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b0c57610b0b6109c1565b5b6001820190505b919050565b600060208284031215610b2b5760006000fd5b8151610b3681610a12565b809150505b92915050565b600060208284031215610b545760006000fd5b815161ffff811681141515610b695760006000fd5b809150505b92915050565b600060208201905061ffff831682525b92915050565b600060408284031215610b9d5760006000fd5b6040516040810181811067ffffffffffffffff82111715610bc157610bc061077b565b5b80604052508251610bd181610a12565b808252506020830151610be381610803565b80602083015250809150505b92915050565b600061ffff808316818516915081811015610c1357610c126109c1565b5b818103925050505b92915050565b600061ffff80831681811415610c3a57610c396109c1565b5b60018101925050505b919050565bfea26469706673582212201b5db26ed2763eb56270caf4e96b050f32050e453777478b1ab4674f04e2b69f64736f6c634300080c0033";
    static readonly abi: ({
        inputs: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        outputs: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): ProtocolDataAggregatorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ProtocolDataAggregator;
}
export {};
