var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
var _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "contract IGovernor",
                        name: "Governor",
                        type: "address",
                    },
                ],
                internalType: "struct IHue.ConstructorParams",
                name: "params",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "Stopped",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "burnFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "count",
                type: "uint256",
            },
        ],
        name: "burnReserves",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "dest",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "count",
                type: "uint256",
            },
        ],
        name: "distributeReserves",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "governor",
        outputs: [
            {
                internalType: "contract IGovernor",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "dest",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "count",
                type: "uint256",
            },
        ],
        name: "mintTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "reserves",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "stopped",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4",
            },
        ],
        name: "validUpdate",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60a0604052600160076000509090553480156200001c5760006000fd5b50604051620020f6380380620020f6833981810160405281019062000042919062000147565b5b80600001515b6040518060400160405280600381526020017f48756500000000000000000000000000000000000000000000000000000000008152602001506040518060400160405280600381526020017f48756500000000000000000000000000000000000000000000000000000000008152602001505b8160036000509081620000d091906200027d565b508060046000509081620000e591906200027d565b505b50508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815260200150505b505b506200035a5662000359565b634e487b7160e01b600052604160045260246000fd5b565b6000602082840312156200015b5760006000fd5b604051602081018181106001600160401b03821117156200018157620001806200012f565b5b806040525082516001600160a01b03811681141515620001a15760006000fd5b80825250809150505b92915050565b60008160011c905060018216801515620001cb57607f821691505b60208210811415620001ed57634e487b7160e01b600052602260045260246000fd5b505b919050565b80600052506000602060002090505b90565b601f8211156200025c57600081815260208120601f850160051c8101602086101562000230578190505b601f850160051c820191508090505b8181101562000258578281555b6001810190506200023f565b5050505b5050505b565b60008260011b6000198460031b1c1983161790505b92915050565b81516001600160401b038111156200029a57620002996200012f565b5b620002b281620002ab8454620001b0565b8462000206565b60006020809150601f831160018114620002eb5760008415620002d6578387015190505b620002e2858262000262565b86555062000350565b601f198416620002fb86620001f4565b60005b82811015620003245785890151825560018201915084860195505b8481019050620002fe565b508582101562000344578488015160001960f88860031b161c1981168255505b505060018460011b0185555b5050505050505b565b5b608051611d6b6200038b600039600081816104f00152818161054a015281816107010152610a960152611d6b6000f3fe60806040523480156100115760006000fd5b50600436106101565760003560e01c8063449a52f8116100ce57806395d89b4111610082578063a9059cbb11610067578063a9059cbb146103a2578063c59fb1ab146103d2578063dd62ed3e146103ee57610156565b806395d89b4114610354578063a457c2d71461037257610156565b806375172a8b116100b357806375172a8b146102fc57806375f12b211461031a57806379cc67901461033857610156565b8063449a52f8146102b057806370a08231146102cc57610156565b806316f9428f1161012557806323b872dd1161010a57806323b872dd14610232578063313ce56714610262578063395093511461028057610156565b806316f9428f146101f857806318160ddd1461021457610156565b806306fdde031461015c578063095ea7b31461017a5780630c340a24146101aa578063113cf1ab146101c857610156565b60006000fd5b61016461041e565b6040516101719190611540565b60405180910390f35b610194600480360381019061018f91906115da565b6104b8565b6040516101a1919061160d565b60405180910390f35b6101b26104ee565b6040516101bf9190611621565b60405180910390f35b6101e260048036038101906101dd9190611649565b610512565b6040516101ef919061160d565b60405180910390f35b610212600480360381019061020d91906115da565b610537565b005b61021c610636565b604051610229919061169a565b60405180910390f35b61024c600480360381019061024791906116ac565b610648565b604051610259919061160d565b60405180910390f35b61026a610690565b60405161027791906116f3565b60405180910390f35b61029a600480360381019061029591906115da565b61069e565b6040516102a7919061160d565b60405180910390f35b6102ca60048036038101906102c591906115da565b6106ee565b005b6102e660048036038101906102e19190611708565b6107ec565b6040516102f3919061169a565b60405180910390f35b610304610840565b604051610311919061169a565b60405180910390f35b61032261085b565b60405161032f919061160d565b60405180910390f35b610352600480360381019061034d91906115da565b61086e565b005b61035c610923565b6040516103699190611540565b60405180910390f35b61038c600480360381019061038791906115da565b6109bd565b604051610399919061160d565b60405180910390f35b6103bc60048036038101906103b791906115da565b610a50565b6040516103c9919061160d565b60405180910390f35b6103ec60048036038101906103e79190611731565b610a86565b005b6104086004803603810190610403919061174f565b610b42565b604051610415919061169a565b60405180910390f35b6060600360005080546104309061178d565b80601f016020809104026020016040519081016040528092919081815260200182805461045c9061178d565b80156104a95780601f1061047e576101008083540402835291602001916104a9565b820191906000526020600020905b81548152906001019060200180831161048c57829003601f168201915b505050505090506104b5565b90565b600060006104ca610bd763ffffffff16565b90506104dd818585610be463ffffffff16565b60019150506104e856505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600660005060205280600052604060002060009150909054906101000a900460ff1681565b610545610dbf63ffffffff16565b6106117f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166385aa61036040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b4573d600060003e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d891906117e8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e1a63ffffffff16565b610622308383610e6063ffffffff16565b5b61063161110c63ffffffff16565b5b5050565b60006002600050549050610645565b90565b6000600061065a610bd763ffffffff16565b905061066d85828561111c63ffffffff16565b61067e858585610e6063ffffffff16565b600191505061068956505b9392505050565b60006012905061069b565b90565b600060006106b0610bd763ffffffff16565b90506106dd8185856106c88589610b4263ffffffff16565b6106d29190611842565b610be463ffffffff16565b60019150506106e856505b92915050565b6106fc610dbf63ffffffff16565b6107c87f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166380f556056040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076b573d600060003e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f9190611861565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e1a63ffffffff16565b6107d882826111b963ffffffff16565b5b6107e761110c63ffffffff16565b5b5050565b6000600060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054905061083b565b919050565b6000610851306107ec63ffffffff16565b9050610858565b90565b600560009054906101000a900460ff1681565b61087c610dbf63ffffffff16565b600061088e8333610b4263ffffffff16565b90508181101515156108d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cc9061188a565b60405180910390fd5b6108fe836108e7610bd763ffffffff16565b84846108f391906118c9565b610be463ffffffff16565b61090e838361133463ffffffff16565b505b61091e61110c63ffffffff16565b5b5050565b6060600460005080546109359061178d565b80601f01602080910402602001604051908101604052809291908181526020018280546109619061178d565b80156109ae5780601f10610983576101008083540402835291602001916109ae565b820191906000526020600020905b81548152906001019060200180831161099157829003601f168201915b505050505090506109ba565b90565b600060006109cf610bd763ffffffff16565b905060006109e38286610b4263ffffffff16565b9050838110151515610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a21906118e8565b60405180910390fd5b610a3d8286868403610be463ffffffff16565b600192505050610a4a5650505b92915050565b60006000610a62610bd763ffffffff16565b9050610a75818585610e6063ffffffff16565b6001915050610a8056505b92915050565b610a94610dbf63ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663734875a8336040518263ffffffff1660e01b8152600401610aed919061194d565b60006040518083038186803b158015610b065760006000fd5b505afa158015610b1b573d600060003e3d6000fd5b50505050610b2f308261133463ffffffff16565b5b610b3e61110c63ffffffff16565b5b50565b6000600160005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050610bd1565b92915050565b6000339050610be1565b90565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90611975565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610cc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbf906119da565b60405180910390fd5b80600160005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190909055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610db1919061169a565b60405180910390a35b505050565b600260076000505414151515610e0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0190611a3f565b60405180910390fd5b600260076000508190909055505b565b801515610e5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5390611a7e565b60405180910390fd5b5b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ed2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec990611abd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90611b22565b60405180910390fd5b610f5583838361153063ffffffff16565b6000600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050818110151515610fe4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdb90611b87565b60405180910390fd5b818103600060005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555081600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082828250546110869190611842565b9250508190909055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110ec919061169a565b60405180910390a361110584848461153663ffffffff16565b505b505050565b600160076000508190909055505b565b600061112e8484610b4263ffffffff16565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811415156111b25781811015151561119e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119590611bec565b60405180910390fd5b6111b18484848403610be463ffffffff16565b5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561122b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122290611c2b565b60405180910390fd5b61123d6000838361153063ffffffff16565b806002600082828250546112519190611842565b92505081909090555080600060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082828250546112ae9190611842565b9250508190909055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611315919061169a565b60405180910390a361132f6000838361153663ffffffff16565b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139d90611c6a565b60405180910390fd5b6113b88260008361153063ffffffff16565b6000600060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050818110151515611447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143e90611ccf565b60405180910390fd5b818103600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819090905550816002600082828250546114a991906118c9565b925050819090905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611510919061169a565b60405180910390a361152a8360008461153663ffffffff16565b505b5050565b5b505050565b5b50505056611d34565b600060208083528351808285015260005b8181101561157157828187010151604082870101525b8281019050611551565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116811415156115d65760006000fd5b505b565b60006000604083850312156115ef5760006000fd5b82356115fa816115b1565b80925050602083013590505b9250929050565b600060208201905082151582525b92915050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff831682525b92915050565b60006020828403121561165c5760006000fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114151561168f5760006000fd5b809150505b92915050565b60006020820190508282525b92915050565b600060006000606084860312156116c35760006000fd5b83356116ce816115b1565b8093505060208401356116e0816115b1565b80925050604084013590505b9250925092565b600060208201905060ff831682525b92915050565b60006020828403121561171b5760006000fd5b8135611726816115b1565b809150505b92915050565b6000602082840312156117445760006000fd5b813590505b92915050565b60006000604083850312156117645760006000fd5b823561176f816115b1565b809250506020830135611781816115b1565b809150505b9250929050565b60008160011c9050600182168015156117a757607f821691505b602082108114156117e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b505b919050565b6000602082840312156117fb5760006000fd5b8151611806816115b1565b809150505b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b565b600082820190508082111561185a57611859611811565b5b5b92915050565b6000602082840312156118745760006000fd5b815161187f816115b1565b809150505b92915050565b60208152601660208201527f4275726e206578636565647320616c6c6f77616e636500000000000000000000604082015260006060820190505b919050565b60008282039050818111156118e1576118e0611811565b5b5b92915050565b60208152602560208201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff831682525b92915050565b60208152602460208201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602260208201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152600d60208201527f4c43205265656e7472616e637900000000000000000000000000000000000000604082015260006060820190505b919050565b60208152600e60208201527f4e6f7420417574686f72697a6564000000000000000000000000000000000000604082015260006060820190505b919050565b60208152602560208201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602360208201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602660208201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152601d60208201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260006060820190505b919050565b60208152601f60208201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260006060820190505b919050565b60208152602160208201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565b60208152602260208201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f6365000000000000000000000000000000000000000000000000000000000000606082015260006080820190505b919050565bfea2646970667358221220f3798349f894712704ceba0ef93eb9af86314665a696ab25a6d8b8d30e49fa9764736f6c63430008100033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var Hue__factory = /** @class */ (function (_super) {
    __extends(Hue__factory, _super);
    function Hue__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    Hue__factory.prototype.deploy = function (params, overrides) {
        return _super.prototype.deploy.call(this, params, overrides || {});
    };
    Hue__factory.prototype.getDeployTransaction = function (params, overrides) {
        return _super.prototype.getDeployTransaction.call(this, params, overrides || {});
    };
    Hue__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Hue__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Hue__factory.createInterface = function () {
        return new utils.Interface(_abi);
    };
    Hue__factory.connect = function (address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    };
    Hue__factory.bytecode = _bytecode;
    Hue__factory.abi = _abi;
    return Hue__factory;
}(ContractFactory));
export { Hue__factory };
