var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "pool",
                type: "address",
            },
        ],
        name: "swapToReenter",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "uniswapV3SwapCallback",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156100115760006000fd5b50610017565b611172806100266000396000f3fe60806040523480156100115760006000fd5b506004361061003b5760003560e01c8063c22a2bfe14610041578063fa461e331461005d5761003b565b60006000fd5b61005b60048036038101906100569190610add565b610079565b005b61007760048036038101906100729190610b22565b610174565b005b8073ffffffffffffffffffffffffffffffffffffffff1663128acb08600060006001600173fffd8963efd1fc6a506488495d951d5263988d266100bc9190610bb2565b600067ffffffffffffffff8111156100d7576100d6610c11565b5b6040519080825280601f01601f1916602001820160405280156101095781602001600182028036833780820191505090505b506040518663ffffffff1660e01b815260040161012a959493929190610cae565b6040604051808303816000875af115801561014a573d600060003e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610d02565b50505b50565b3373ffffffffffffffffffffffffffffffffffffffff1663128acb086000600060016000600067ffffffffffffffff8111156101b3576101b2610c11565b5b6040519080825280601f01601f1916602001820160405280156101e55781602001600182028036833780820191505090505b506040518663ffffffff1660e01b8152600401610206959493929190610d2a565b6040604051808303816000875af192505050801561024257506040513d601f19601f8201168201806040525081019061023f9190610d02565b60015b6103215761024e610d7e565b806308c379a0141561030f5750610263610e12565b8061026e5750610311565b6040518060400160405280600381526020017f4c4f4b00000000000000000000000000000000000000000000000000000000008152602001506040516020016102b79190610ec4565b6040516020818303038152906040528051906020012060001916816040516020016102e29190610ec4565b60405160208183030381529060405280519060200120600019161415156103095760006000fd5b5061031c565b505b3d600060003e3d6000fd5b610324565b50505b3373ffffffffffffffffffffffffffffffffffffffff16633c8a7d8d6000600060006000600067ffffffffffffffff81111561036357610362610c11565b5b6040519080825280601f01601f1916602001820160405280156103955781602001600182028036833780820191505090505b506040518663ffffffff1660e01b81526004016103b6959493929190610ee0565b6040604051808303816000875af19250505080156103f257506040513d601f19601f820116820180604052508101906103ef9190610f46565b60015b6104d1576103fe610d7e565b806308c379a014156104bf5750610413610e12565b8061041e57506104c1565b6040518060400160405280600381526020017f4c4f4b00000000000000000000000000000000000000000000000000000000008152602001506040516020016104679190610ec4565b6040516020818303038152906040528051906020012060001916816040516020016104929190610ec4565b60405160208183030381529060405280519060200120600019161415156104b95760006000fd5b506104cc565b505b3d600060003e3d6000fd5b6104d4565b50505b3373ffffffffffffffffffffffffffffffffffffffff16634f1eb3d8600060006000600060006040518663ffffffff1660e01b815260040161051a959493929190610f6e565b6040604051808303816000875af192505050801561055657506040513d601f19601f820116820180604052508101906105539190610ffb565b60015b61063557610562610d7e565b806308c379a014156106235750610577610e12565b806105825750610625565b6040518060400160405280600381526020017f4c4f4b00000000000000000000000000000000000000000000000000000000008152602001506040516020016105cb9190610ec4565b6040516020818303038152906040528051906020012060001916816040516020016105f69190610ec4565b604051602081830303815290604052805190602001206000191614151561061d5760006000fd5b50610630565b505b3d600060003e3d6000fd5b610638565b50505b3373ffffffffffffffffffffffffffffffffffffffff1663a34123a76000600060006040518463ffffffff1660e01b815260040161067893929190611031565b6040604051808303816000875af19250505080156106b457506040513d601f19601f820116820180604052508101906106b19190610f46565b60015b610793576106c0610d7e565b806308c379a0141561078157506106d5610e12565b806106e05750610783565b6040518060400160405280600381526020017f4c4f4b00000000000000000000000000000000000000000000000000000000008152602001506040516020016107299190610ec4565b6040516020818303038152906040528051906020012060001916816040516020016107549190610ec4565b604051602081830303815290604052805190602001206000191614151561077b5760006000fd5b5061078e565b505b3d600060003e3d6000fd5b610796565b50505b3373ffffffffffffffffffffffffffffffffffffffff1663490e6cbc600060006000600067ffffffffffffffff8111156107d3576107d2610c11565b5b6040519080825280601f01601f1916602001820160405280156108055781602001600182028036833780820191505090505b506040518563ffffffff1660e01b81526004016108259493929190611069565b600060405180830381600087803b1580156108405760006000fd5b505af1925050508015610851575060015b6109305761085d610d7e565b806308c379a0141561091e5750610872610e12565b8061087d5750610920565b6040518060400160405280600381526020017f4c4f4b00000000000000000000000000000000000000000000000000000000008152602001506040516020016108c69190610ec4565b6040516020818303038152906040528051906020012060001916816040516020016108f19190610ec4565b60405160208183030381529060405280519060200120600019161415156109185760006000fd5b5061092b565b505b3d600060003e3d6000fd5b610931565b5b3373ffffffffffffffffffffffffffffffffffffffff166385b667296000600060006040518463ffffffff1660e01b8152600401610971939291906110b0565b6040604051808303816000875af19250505080156109ad57506040513d601f19601f820116820180604052508101906109aa9190610ffb565b60015b610a8c576109b9610d7e565b806308c379a01415610a7a57506109ce610e12565b806109d95750610a7c565b6040518060400160405280600381526020017f4c4f4b0000000000000000000000000000000000000000000000000000000000815260200150604051602001610a229190610ec4565b604051602081830303815290604052805190602001206000191681604051602001610a4d9190610ec4565b6040516020818303038152906040528051906020012060001916141515610a745760006000fd5b50610a87565b505b3d600060003e3d6000fd5b610a8f565b50505b60001515610ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac9906110fc565b60405180910390fd5b5b505050505661113b565b600060208284031215610af05760006000fd5b813573ffffffffffffffffffffffffffffffffffffffff811681141515610b175760006000fd5b809150505b92915050565b600060006000600060608587031215610b3b5760006000fd5b8435935060208501359250604085013567ffffffffffffffff80821115610b625760006000fd5b818701915087601f8301121515610b795760006000fd5b813581811115610b895760006000fd5b886020828501011115610b9c5760006000fd5b6020830194508093505050505b92959194509250565b600073ffffffffffffffffffffffffffffffffffffffff80841681841603915080821115610c09577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b505b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b565b6000815180845260005b81811015610c6f576020808286010151818388010152505b602081019050610c4c565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152610cf560a0830184610c42565b90505b9695505050505050565b6000600060408385031215610d175760006000fd5b82519150602083015190505b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152610d7160a0830184610c42565b90505b9695505050505050565b600060033d1115610d99576004600060003e60005160e01c90505b5b90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715610e08577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525050505b565b600060443d1015610e2257610ec1565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715610e72575050505050610ec1565b8285019150815181811115610e8c57505050505050610ec1565b843d8701016020828501011115610ea857505050505050610ec1565b610eb760208286010187610d9d565b5050809450505050505b90565b602081526000610ed76020830184610c42565b90505b92915050565b73ffffffffffffffffffffffffffffffffffffffff861681528460020b60208201528360020b60408201526fffffffffffffffffffffffffffffffff8316606082015260a060808201526000610f3960a0830184610c42565b90505b9695505050505050565b6000600060408385031215610f5b5760006000fd5b82519150602083015190505b9250929050565b600060a08201905073ffffffffffffffffffffffffffffffffffffffff871682528560020b60208301528460020b60408301526fffffffffffffffffffffffffffffffff80851660608401528084166080840152505b9695505050505050565b6000815190506fffffffffffffffffffffffffffffffff811681141515610ff55760006000fd5b5b919050565b60006000604083850312156110105760006000fd5b61101983610fce565b915061102760208401610fce565b90505b9250929050565b60006060820190508460020b82528360020b60208301526fffffffffffffffffffffffffffffffff831660408301525b949350505050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201528260408201526080606082015260006110a46080830184610c42565b90505b95945050505050565b600060608201905073ffffffffffffffffffffffffffffffffffffffff851682526fffffffffffffffffffffffffffffffff80851660208401528084166040840152505b949350505050565b60208152601160208201527f556e61626c6520746f207265656e746572000000000000000000000000000000604082015260006060820190505b919050565bfea264697066735822122010fd1b5e36c599f5308a9304610d8b7b4e761fdaf188862de641a519c349106664736f6c63430008100033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var TestUniswapV3ReentrantCallee__factory = /** @class */ (function (_super) {
    __extends(TestUniswapV3ReentrantCallee__factory, _super);
    function TestUniswapV3ReentrantCallee__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    TestUniswapV3ReentrantCallee__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    TestUniswapV3ReentrantCallee__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    TestUniswapV3ReentrantCallee__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    TestUniswapV3ReentrantCallee__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    TestUniswapV3ReentrantCallee__factory.createInterface = function () {
        return new utils.Interface(_abi);
    };
    TestUniswapV3ReentrantCallee__factory.connect = function (address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    };
    TestUniswapV3ReentrantCallee__factory.bytecode = _bytecode;
    TestUniswapV3ReentrantCallee__factory.abi = _abi;
    return TestUniswapV3ReentrantCallee__factory;
}(ContractFactory));
export { TestUniswapV3ReentrantCallee__factory };
